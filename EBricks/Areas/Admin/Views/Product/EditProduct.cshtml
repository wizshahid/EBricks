@model ModelLayer.Product

@{
    ViewBag.Title = "EditProduct";
}
<script>

    function deleteImage(id, imagePath) {
        $.ajax({
            url: "/Admin/Product/DeleteImage",
            method: "post",
            data: { id: id, imagePath: imagePath },
            success: function () {
                $("#" + id).hide();

            }
        });
    }

</script>
<div class="col-12">

    <h2 class="text-center"> Edit Product Details</h2>

    @using (Html.BeginForm("EditProduct", "Product", FormMethod.Post, new { enctype = "multipart/form-data" }))
            {
        @Html.HiddenFor(model => model.Id)
        @Html.HiddenFor(model => model.PostedBy)

        <div style="display:flex; justify-content:space-around; flex-wrap:wrap;">

            <div class="card text-center col-md-4">

                <div class="card-body">
                    <div class="form-group">
                        <label>Product Code</label>

                        @Html.EditorFor(model => model.ProductCode, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.ProductCode, "", new { @class = "text-danger" })
                    </div>
                    <div class="form-group">
                        <label>Product Name</label>

                        @Html.EditorFor(model => model.ProductName, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.ProductName, "", new { @class = "text-danger" })
                    </div>
                    <div class="form-group">
                        <label>Brand</label>

                        @Html.EditorFor(model => model.CompanyName, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.CompanyName, "", new { @class = "text-danger" })
                    </div>
                    <div class="form-group">
                        <label>Market Price</label>

                        @Html.EditorFor(model => model.MRP, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.MRP, "", new { @class = "text-danger" })
                    </div>
                    <div class="form-group">
                        <label>Discounted Price</label>

                        @Html.EditorFor(model => model.Price, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Price, "", new { @class = "text-danger" })
                    </div>

                </div>
            </div>
            <div class="card text-center col-md-4">

                <div class="card-body">
                    <div class="form-group">
                        <label>Unit Of Price</label>

                        @Html.EditorFor(model => model.Unit, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Unit, "", new { @class = "text-danger" })
                    </div>

                    <div class="form-group">
                        <label>Select Images</label>

                        <input type="file" name="Files" multiple accept="image/*" class="form-control glyphicon-upload" value="" />
                    </div>
                    <div class="form-group">
                        <label>Description</label>

                        @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
                    </div>
                    <div class="form-group">
                        <label>Is it in Stock</label>

                        @Html.EditorFor(model => model.IsAvailable, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.IsAvailable, "", new { @class = "text-danger" })
                    </div>
                    <div class="form-group">
                        <label>Select Category</label>

                        @Html.DropDownListFor(model => model.CategoryId, null, "Select Category", new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.CategoryId, "", new { @class = "text-danger" })
                    </div>


                    <div class="form-group">
                        <input type="submit" value="Save Changes" class="btn btn-primary btn-block" />
                    </div>
                </div>
            </div>
            <div class="card text-center col-md-4">

                <div class="card-body">
                    @foreach (var item in Model.ProductImages)
                {
                        <div id="@item.Id" style="position:relative;">
                            <img src="@Url.Content(item.ImagePath)" class="img img-fluid" style="width:100%;height:150px" />
                            <div style="position:absolute; top:10px; right:40px;">
                                <a href="#" name="btnDelete" onclick="deleteImage(@item.Id,'@item.ImagePath')" id="@item.Id" style="padding:5px 10px; color:white; background-color:tomato; border:none;"> <h6 class="fa fa-trash"></h6></a>

                            </div>
                        </div>
                    }

                </div>
            </div>
        </div>

    }

</div>



